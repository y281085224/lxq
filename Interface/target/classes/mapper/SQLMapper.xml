<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--这是java与数据库之间的xml文件，这个文件必须放到这里， databaseConfig.xml中有这个文件的路径-->
<!--这里的sql语句之所以能够执行，是因为resources文件下databaseConfig.xml-->


<!-- id 必须与Test_1_Demo文件中接口，return出来的一样，不然会执行失败-->
<mapper namespace="说明">

    <!--查询登录表中的数据-->
    <select id="loginCase" parameterType="Integer"  resultType="com.tester.model.LoginCase">
        <!--parameterType="Integer" 是因为用例中这里输入的是1，Integer就是修饰类型 参考cases文件夹下的LoginTest文件；   resultType="com.tester.model.LoginCase" 这是返回结果的修饰类型-->

        select * from logincase
        where id = #{id};
    </select>

    <!--查询添加用户表中的数据-->
    <select id="addUserCase" parameterType="Integer" resultType="com.tester.model.AddUserCase">
        select * from addUserCase where id=#{id};
    </select>


    <!--查询用户信息表中的数据-->
    <select id="getUserInfoCase" parameterType="Integer" resultType="com.tester.model.GetUserInfoCase">
        <!-- SQL语句 -->
        select * from getUserInfoCase where id=#{id};
    </select>

    <!--查询获取用户表中的数据-->
    <select id="getUserListCase" parameterType="Integer" resultType="com.tester.model.GetUserListCase">
        <!-- SQL语句 -->
        select * from getUserListCase where id=#{id};
    </select>

    <!--查询更新/删除表中的数据-->
    <select id="updateUserInfoCase" parameterType="Integer" resultType="com.tester.model.UpdateUserInfoCase">
        select * from updateUserInfoCase where id = #{id};
    </select>









    <!--添加用户接口-->
    <select id="addUser" parameterType="com.tester.model.AddUserCase" resultType="com.tester.model.User">
        select * from user where
        userName = #{userName}
        and password=#{password}
        and sex = #{sex}
        and age=#{age}
        and permission=#{permission}
        and isDelete=#{isDelete};
    </select>


    <!--添加用户接口-->
    <select id="addDataUser" parameterType="com.tester.model.AddData" resultType="com.tester.model.User">
        select * from user where
        userName = #{userName}
        and password=#{password}
        and sex = #{sex}
        and age=#{age}
        and permission=#{permission}
        and isDelete=#{isDelete};
    </select>

    <!--获取用户信息-->
    <select id="getUserInfo" parameterType="com.tester.model.GetUserInfoCase"  resultType="com.tester.model.User">
        <!--userId是GetUserInfoCase中的 id是User中的-->
        select * from user where
        id = #{userId};
    </select>

    <!--获取用户列表-->
    <select id="getUserList" parameterType="com.tester.model.GetUserListCase" resultType="com.tester.model.User">
        select * from user
        <trim prefix="WHERE" prefixOverrides="and">
            <if test="null !=userName and  '' !=userName">
                AND userName=#{userName}
            </if>

            <if test="null !=sex and  '' !=sex">
                AND sex=#{sex}
            </if>

            <if test="null !=age and  '' !=age">
                AND age=#{age}
            </if>
        </trim>


    </select>

    <!--获取更新之后的数据-->
    <select id="getUpdateUserInfo" parameterType="com.tester.model.UpdateUserInfoCase" resultType="com.tester.model.User">
        select *from user
        <trim prefix="WHERE" prefixOverrides="and">
            <if test="null !=userName and  '' !=userName">
                AND userName=#{userName}
            </if>

            <if test="null !=sex and  '' !=sex">
                AND sex=#{sex}
            </if>

            <if test="null !=age and  '' !=age">
                AND age=#{age}
            </if>

            <if test="null !=permission and  '' !=permission">
                AND permission=#{permission}
            </if>

            <if test="null !=isDelete and  '' !=isDelete">
                AND isDelete=#{isDelete}
            </if>
        </trim>

        And id = #{userId}    <!--这个没看懂-->
    </select>

</mapper>